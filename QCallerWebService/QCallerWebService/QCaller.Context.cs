//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QCallerWebService
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class QCallerEntities : DbContext
    {
        public QCallerEntities()
            : base("name=QCallerEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<DBCustomer> DBCustomers { get; set; }
        public virtual DbSet<DBReservation> DBReservations { get; set; }
        public virtual DbSet<DBRestaurant> DBRestaurants { get; set; }
        public virtual DbSet<DBRestaurantLogo> DBRestaurantLogoes { get; set; }
        public virtual DbSet<database_firewall_rules> database_firewall_rules { get; set; }
    
        public virtual int DeleteCustomer(Nullable<int> customerID)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteCustomer", customerIDParameter);
        }
    
        public virtual int DeleteReservation(Nullable<int> reservationID)
        {
            var reservationIDParameter = reservationID.HasValue ?
                new ObjectParameter("ReservationID", reservationID) :
                new ObjectParameter("ReservationID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteReservation", reservationIDParameter);
        }
    
        public virtual int DeleteRestaurant(Nullable<int> restaurantID)
        {
            var restaurantIDParameter = restaurantID.HasValue ?
                new ObjectParameter("RestaurantID", restaurantID) :
                new ObjectParameter("RestaurantID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteRestaurant", restaurantIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SaveCustomer(string phoneNumber, string firstName, string lastName, string emailAddress)
        {
            var phoneNumberParameter = phoneNumber != null ?
                new ObjectParameter("PhoneNumber", phoneNumber) :
                new ObjectParameter("PhoneNumber", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var emailAddressParameter = emailAddress != null ?
                new ObjectParameter("EmailAddress", emailAddress) :
                new ObjectParameter("EmailAddress", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SaveCustomer", phoneNumberParameter, firstNameParameter, lastNameParameter, emailAddressParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SaveReservation(Nullable<int> restaurantID, Nullable<int> customerID, Nullable<System.DateTime> date, Nullable<int> guestCount, string status)
        {
            var restaurantIDParameter = restaurantID.HasValue ?
                new ObjectParameter("RestaurantID", restaurantID) :
                new ObjectParameter("RestaurantID", typeof(int));
    
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var guestCountParameter = guestCount.HasValue ?
                new ObjectParameter("GuestCount", guestCount) :
                new ObjectParameter("GuestCount", typeof(int));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SaveReservation", restaurantIDParameter, customerIDParameter, dateParameter, guestCountParameter, statusParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SaveRestaurant(string name, string address, string city, string state, string zipCode, string phoneNumber, string emailAddress, byte[] logo)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            var zipCodeParameter = zipCode != null ?
                new ObjectParameter("ZipCode", zipCode) :
                new ObjectParameter("ZipCode", typeof(string));
    
            var phoneNumberParameter = phoneNumber != null ?
                new ObjectParameter("PhoneNumber", phoneNumber) :
                new ObjectParameter("PhoneNumber", typeof(string));
    
            var emailAddressParameter = emailAddress != null ?
                new ObjectParameter("EmailAddress", emailAddress) :
                new ObjectParameter("EmailAddress", typeof(string));
    
            var logoParameter = logo != null ?
                new ObjectParameter("Logo", logo) :
                new ObjectParameter("Logo", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SaveRestaurant", nameParameter, addressParameter, cityParameter, stateParameter, zipCodeParameter, phoneNumberParameter, emailAddressParameter, logoParameter);
        }
    
        public virtual int UpdateCustomer(Nullable<int> customerID, string firstName, string lastName, string phoneNumber, string emailAddress)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var phoneNumberParameter = phoneNumber != null ?
                new ObjectParameter("PhoneNumber", phoneNumber) :
                new ObjectParameter("PhoneNumber", typeof(string));
    
            var emailAddressParameter = emailAddress != null ?
                new ObjectParameter("EmailAddress", emailAddress) :
                new ObjectParameter("EmailAddress", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateCustomer", customerIDParameter, firstNameParameter, lastNameParameter, phoneNumberParameter, emailAddressParameter);
        }
    
        public virtual int UpdateReservation(Nullable<int> reservationID, Nullable<System.DateTime> time, Nullable<int> guestCount, string status)
        {
            var reservationIDParameter = reservationID.HasValue ?
                new ObjectParameter("ReservationID", reservationID) :
                new ObjectParameter("ReservationID", typeof(int));
    
            var timeParameter = time.HasValue ?
                new ObjectParameter("Time", time) :
                new ObjectParameter("Time", typeof(System.DateTime));
    
            var guestCountParameter = guestCount.HasValue ?
                new ObjectParameter("GuestCount", guestCount) :
                new ObjectParameter("GuestCount", typeof(int));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateReservation", reservationIDParameter, timeParameter, guestCountParameter, statusParameter);
        }
    
        public virtual int UpdateRestaurant(Nullable<int> restaurantID, string restaurantName, string address, string city, string state, string zipCode, string phoneNumber, string emailAddress)
        {
            var restaurantIDParameter = restaurantID.HasValue ?
                new ObjectParameter("RestaurantID", restaurantID) :
                new ObjectParameter("RestaurantID", typeof(int));
    
            var restaurantNameParameter = restaurantName != null ?
                new ObjectParameter("RestaurantName", restaurantName) :
                new ObjectParameter("RestaurantName", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            var zipCodeParameter = zipCode != null ?
                new ObjectParameter("ZipCode", zipCode) :
                new ObjectParameter("ZipCode", typeof(string));
    
            var phoneNumberParameter = phoneNumber != null ?
                new ObjectParameter("PhoneNumber", phoneNumber) :
                new ObjectParameter("PhoneNumber", typeof(string));
    
            var emailAddressParameter = emailAddress != null ?
                new ObjectParameter("EmailAddress", emailAddress) :
                new ObjectParameter("EmailAddress", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateRestaurant", restaurantIDParameter, restaurantNameParameter, addressParameter, cityParameter, stateParameter, zipCodeParameter, phoneNumberParameter, emailAddressParameter);
        }
    }
}
